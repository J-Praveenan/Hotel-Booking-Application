package com.spring.lakeSidehotel.model;

import ch.qos.logback.core.testUtil.RandomUtil;
import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import org.springframework.context.annotation.EnableMBeanExport;

import java.time.LocalDate;

// An entity represents a table in a relational database, and instances of the entity class correspond to rows in that table.
@Entity
// generates getter methods for all fields in the class, while @Setter generates setter methods for all non-final fields.
@Getter
@Setter
// generates a constructor with parameters for all fields in the class.
@AllArgsConstructor
// generates a no-argument constructor for the class.
@NoArgsConstructor

public class BookedRoom {

    @Id // It is used to  denote the primary key of an entity.
    @GeneratedValue(strategy = GenerationType.IDENTITY) // It indicates that the primary key values will be generated by the database incrementally
    private Long bookingId;

    @Column(name = "check_In")
    private LocalDate checkInDate;
    @Column(name = "check_Out")
    private LocalDate checkOutDate;

    @Column(name = "guest_fullName")
    private String guestName;

    @Column(name = "guest_email")
    private String guestEmail;

    @Column(name = "adults")
    private int numOfAdult;
    @Column(name = "children")
    private int numOfChildren;

    @Column(name = "total_guest")
    private int totalNumOfGuest;

    @Column(name = "confirmation_code")
    private String bookingConfirmationCode;

    @ManyToOne(fetch = FetchType.LAZY) // One Room has multiple booking
    @JoinColumn(name = "room_Id")
    private Room room;

    public void calculateTotalNumberOfGuest(){
        this.totalNumOfGuest = this.numOfChildren + this.numOfAdult;
    }

    public void setNumOfAdult(int numOfAdult) {
        this.numOfAdult = numOfAdult;
        calculateTotalNumberOfGuest();

    }

    public void setNumOfChildren(int numOfChildren) {
        this.numOfChildren = numOfChildren;
        calculateTotalNumberOfGuest();
    }

    public void setBookingConfirmationCode(String bookingConfirmationCode) {
        this.bookingConfirmationCode = bookingConfirmationCode;

    }

    public void setRoom(Room room) {
    }
}
